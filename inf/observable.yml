apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
  namespace: inf
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs: [get, list, watch]
  - nonResourceURLs: ["/metrics"]
    verbs: [get]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
  namespace: inf
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: default
    namespace: inf

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus
  namespace: inf
data:
  prometheus.yml: |
    # my global config
    global:
      scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
      evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
      # scrape_timeout is set to the global default (10s).
      
      # Alertmanager configuration
      # alerting:
      #   alertmanagers:
      #     - static_configs:
      #         - targets:
      #           # - alertmanager:9093
      
      # Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
      # rule_files:
      # - "first_rules.yml"
      # - "second_rules.yml"
    
    # A scrape configuration containing exactly one endpoint to scrape:
    # Here it's Prometheus itself.
    scrape_configs:
      # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
      - job_name: prometheus
        # metrics_path defaults to '/metrics'
        # scheme defaults to 'http'.
        static_configs:
          - targets: ["localhost:9090"]
      
      - job_name: node-exporter
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            regex: node-exporter
            action: keep
          # 非 Running 状态的 Pod 机器资源已释放，不需要采集
          - source_labels: [__meta_kubernetes_pod_phase]
            regex: Running
            action: keep
          - source_labels: [__meta_kubernetes_pod_ip]
            separator: ;
            regex: (.*)
            target_label: __address__
            replacement: ${1}:9100 # 监控指标暴露在 Pod 的 9100 端口
            action: replace
          - source_labels: [__meta_kubernetes_namespace]
            separator: ;
            regex: (.*)
            target_label: namespace # 将 Pod 所在 namespace 写到 "namespace" label
            replacement: ${1}
            action: replace
        
      - job_name: app
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: keep
            source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            regex: 'true'
          - action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            source_labels:
              - __address__
              - __meta_kubernetes_pod_annotation_prometheus_io_port
            target_label: __address__
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            regex: (.+)$
            target_label: __metrics_path__
            replacement: $1
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: inf
  labels:
    app: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      initContainers:
        - name: init
          image: busybox
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c', 'chown 65534:65534 /data' ]
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: prometheus
          image: prom/prometheus:v2.48.0
          env:
            - name: TZ
              value: Asia/Shanghai
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
            - name: data
              mountPath: /prometheus
      volumes:
        - name: config
          configMap:
            name: prometheus
        - name: data
          hostPath:
            path: /home/prometheus/data

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: inf
spec:
  selector:
    app:  prometheus
  ports:
    - name: http
      port: 9090
      targetPort: 9090