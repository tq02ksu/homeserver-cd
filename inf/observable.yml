apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
  namespace: inf
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs: [get, list, watch]
  - nonResourceURLs: ["/metrics"]
    verbs: [get]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
  namespace: inf
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: default
    namespace: inf

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus
  namespace: inf
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
                - alertmanager:9093
    rule_files:
      - "/etc/prometheus/*-rules.yml"
    scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets: ["localhost:9090"]
      
      - job_name: node-exporter
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            regex: node-exporter
            action: keep
          - source_labels: [__meta_kubernetes_pod_phase]
            regex: Running
            action: keep
          - source_labels: [__meta_kubernetes_pod_ip]
            separator: ;
            regex: (.*)
            target_label: __address__
            replacement: ${1}:9100 # 监控指标暴露在 Pod 的 9100 端口
            action: replace
          - source_labels: [__meta_kubernetes_namespace]
            separator: ;
            regex: (.*)
            target_label: namespace # 将 Pod 所在 namespace 写到 "namespace" label
            replacement: ${1}
            action: replace
      
      - job_name: app
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: keep
            source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            regex: 'true'
          - action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            source_labels:
              - __address__
              - __meta_kubernetes_pod_annotation_prometheus_io_port
            target_label: __address__
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            regex: (.+)$
            target_label: __metrics_path__
            replacement: $1
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)

  general-rules.yml: |
    groups:
      - name: cpu-usage-rules
        rules:
          - alert: High CPU Usage
            expr: (sum by(instance) (irate(node_cpu_seconds_total{job="node-exporter", mode!="idle"}[1m])) / on(instance) group_left sum by (instance)((irate(node_cpu_seconds_total{job="node-exporter"}[1m])))) * 100 > 90
            for: 10m
            labels:
              severity: Critical
            annotations:
              summary: "High CPU Usage"
              description: "CPU在过去10min的使用率为{{printf \"%.2f\" $value}}%，高于阈值请及时处理。"
      - name: system-load-rules
        rules:
          - alert: High System Load
            expr: avg(node_load15{job="node-exporter"}) /  count(count(node_cpu_seconds_total{job="node-exporter"}) by (cpu)) * 100 > 150
            labels:
              severity: Warning
            annotations:
              summary: "High System Load"
              description: "在过去15min内的系统负载为{{printf \"%.2f\" $value}}%，高于阈值请及时处理。"
      - name: filesystem-rules
        rules:
          - alert: Low Disk Space
            expr: 100 - (node_filesystem_avail_bytes{job="node-exporter",device!~'shm|tmpfs'} / node_filesystem_size_bytes{job="node-exporter",device!~'shm|tmpfs'}) * 100< 10
            labels:
              severity: Critical
            annotations:
              summary: "Low Disk Space"
              description:  "当前Device：{{$labels.device}}的剩余磁盘空间为{{printf \"%.2f\" $value}}%，低于阈值请及时处理。"
      - name: memory-rules
        rules:
          - alert: Low Memory Space
            expr: (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes) * 100 < 10
            for: 5m
            labels:
              severity: Critical
            annotations:
              summary: "Low Memory Space"
              description: "当前可以内存空间为{{printf \"%.2f\" $value}}%，低于阈值请及时处理。"
      - name: network-drop-rate-rules
        rules:
          - alert: High Network Drop Rate
            expr: rate(node_network_receive_drop_total[30m])/ rate(node_network_receive_packets_total[30m]) * 100 > 10
            labels:
              severity: Warning
            annotations:
              summary: "High Network Drop Rate"
              description: "当前的网络丢包率为{{printf \"%.2f\" $value}}%，高于阈值请及时处理。"
      - name: kafka-consumer-lag-rules
        rules:
          - alert: High Consumer Lag
            expr: kafka_consumer_fetch_manager_records_lag_max > 100
            labels:
              severity: Warning
            annotations:
              summary: "High Consumer Lag"
              description: "Topic：{{$labels.topic}}的消费者滞后量为{{$value}}条，高于阈值请及时处理。"
      - name: jvm-gc-pause-rules
        rules:
          - alert: High JVM Garbage Collection Pause
            expr: jvm_gc_pause_seconds_max > 1.0
            labels:
              severity: Critical
            annotations:
              summary: "High JVM Garbage Collection Pause"
              description: "Cause：{{$labels.cause}}的垃圾回收暂停时间超过1秒，请及时处理。"
      - name: disk-io-alerts
        rules:
          - alert: High Disk I/O Usage
            expr: 100 * rate(node_disk_io_now[1m]) / (rate(node_disk_io_time_seconds_total[1m]) + 1e-10) > 80
            for: 5m
            labels:
              severity: Critical
            annotations:
              summary: "High Disk I/O Usage"
              description: "当前的磁盘：{{$labels.device}}的I/O使用率为{{printf \"%.2f\" $value}}%，高于阈值请及时处理。"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: inf
  labels:
    app: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      initContainers:
        - name: init
          image: busybox:1.36.1
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c', 'chown 65534:65534 /data' ]
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: prometheus
          image: docker.io/prom/prometheus:v2.48.0
          env:
            - name: TZ
              value: Asia/Shanghai
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
            - name: data
              mountPath: /prometheus
      volumes:
        - name: config
          configMap:
            name: prometheus
        - name: data
          hostPath:
            path: /home/prometheus/data

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: inf
spec:
  selector:
    app:  prometheus
  ports:
    - name: http
      port: 9090
      targetPort: 9090
